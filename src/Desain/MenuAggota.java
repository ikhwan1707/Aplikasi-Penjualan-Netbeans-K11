
package Desain;
import java.awt.event.KeyEvent;
import java.sql.*;
import penjualan.koneksi;
import java.text.SimpleDateFormat;
import javax.swing.table.DefaultTableModel;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.Date;
import javax.swing.JOptionPane;
/**
 *
 * @author heru9
 */
public class MenuAggota extends javax.swing.JPanel {

    
    
    private static Connection conn;
    public MenuAggota() {
        initComponents();
        conn = koneksi.getKoneksi();
        setTabelModel();
        loadData();
        Button();
        try {
            TampilId();
        } catch (SQLException ex) {
            Logger.getLogger(MenuAggota.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        gbt_jenkel = new javax.swing.ButtonGroup();
        PanelMain = new javax.swing.JPanel();
        panelview = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblhasil = new javax.swing.JTable();
        masterdata = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        btntambah = new javax.swing.JButton();
        btnhapus = new javax.swing.JButton();
        btnbatal = new javax.swing.JButton();
        txtcari = new javax.swing.JTextField();
        btncari = new javax.swing.JButton();
        PanelAdd = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        masterdata1 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        btnsave = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtid = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtnama = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtemail = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txttelepon = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtalamat = new javax.swing.JTextField();

        jLabel1.setText("jLabel1");

        setPreferredSize(new java.awt.Dimension(1387, 768));
        setLayout(new java.awt.CardLayout());

        PanelMain.setBackground(new java.awt.Color(255, 255, 255));
        PanelMain.setPreferredSize(new java.awt.Dimension(976, 708));
        PanelMain.setLayout(new java.awt.CardLayout());

        panelview.setBackground(new java.awt.Color(255, 255, 255));
        panelview.setPreferredSize(new java.awt.Dimension(976, 708));
        panelview.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel13.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(102, 102, 102));
        jLabel13.setText("Data Petugas ");
        panelview.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(342, 6, -1, -1));

        tblhasil.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID Petugas", "Nama Petugas", "Alamat", "Email", "No Telepon"
            }
        ));
        tblhasil.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblhasilMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblhasil);

        panelview.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 88, 1133, 382));

        masterdata.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        masterdata.setForeground(new java.awt.Color(102, 102, 102));
        masterdata.setText("Master Data > Anggota");
        masterdata.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                masterdataMouseClicked(evt);
            }
        });
        panelview.add(masterdata, new org.netbeans.lib.awtextra.AbsoluteConstraints(744, 19, -1, -1));

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/laptop.png"))); // NOI18N
        panelview.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(706, 6, -1, -1));

        btntambah.setBackground(new java.awt.Color(51, 51, 255));
        btntambah.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btntambah.setForeground(new java.awt.Color(255, 255, 255));
        btntambah.setText("Tambah");
        btntambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntambahActionPerformed(evt);
            }
        });
        panelview.add(btntambah, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 44, -1, -1));

        btnhapus.setBackground(new java.awt.Color(255, 0, 0));
        btnhapus.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnhapus.setForeground(new java.awt.Color(255, 255, 255));
        btnhapus.setText("Hapus");
        btnhapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhapusActionPerformed(evt);
            }
        });
        panelview.add(btnhapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(134, 44, -1, -1));

        btnbatal.setBackground(new java.awt.Color(255, 102, 0));
        btnbatal.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnbatal.setForeground(new java.awt.Color(255, 255, 255));
        btnbatal.setText("Batal");
        btnbatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbatalActionPerformed(evt);
            }
        });
        panelview.add(btnbatal, new org.netbeans.lib.awtextra.AbsoluteConstraints(248, 44, -1, -1));

        txtcari.setFont(new java.awt.Font("SansSerif", 2, 12)); // NOI18N
        txtcari.setForeground(new java.awt.Color(102, 102, 102));
        txtcari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcariActionPerformed(evt);
            }
        });
        panelview.add(txtcari, new org.netbeans.lib.awtextra.AbsoluteConstraints(744, 44, 201, -1));

        btncari.setText("cari id");
        btncari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncariActionPerformed(evt);
            }
        });
        panelview.add(btncari, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 40, -1, 30));

        PanelMain.add(panelview, "card2");

        PanelAdd.setBackground(new java.awt.Color(255, 255, 255));
        PanelAdd.setPreferredSize(new java.awt.Dimension(976, 708));

        jLabel14.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(102, 102, 102));
        jLabel14.setText("Tambah Data Petugas");

        masterdata1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        masterdata1.setForeground(new java.awt.Color(102, 102, 102));
        masterdata1.setText("Master Data > Dashboard");
        masterdata1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                masterdata1MouseClicked(evt);
            }
        });

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/laptop.png"))); // NOI18N

        btnsave.setBackground(new java.awt.Color(51, 51, 255));
        btnsave.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnsave.setForeground(new java.awt.Color(255, 255, 255));
        btnsave.setText("Save");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(255, 102, 0));
        jButton4.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Batal");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTextField2.setFont(new java.awt.Font("SansSerif", 2, 12)); // NOI18N
        jTextField2.setForeground(new java.awt.Color(102, 102, 102));
        jTextField2.setText("Search");

        jLabel4.setText("ID");

        txtid.setFont(new java.awt.Font("SansSerif", 2, 12)); // NOI18N
        txtid.setForeground(new java.awt.Color(102, 102, 102));
        txtid.setText("ID Petugas");
        txtid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtidActionPerformed(evt);
            }
        });

        jLabel5.setText("Nama Anggota");

        txtnama.setFont(new java.awt.Font("SansSerif", 2, 12)); // NOI18N
        txtnama.setForeground(new java.awt.Color(102, 102, 102));
        txtnama.setText("Nama Anggota");
        txtnama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnamaActionPerformed(evt);
            }
        });

        jLabel6.setText("Email");

        txtemail.setFont(new java.awt.Font("SansSerif", 2, 12)); // NOI18N
        txtemail.setForeground(new java.awt.Color(102, 102, 102));
        txtemail.setText("Email");
        txtemail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtemailActionPerformed(evt);
            }
        });

        jLabel7.setText("No Telepon");

        txttelepon.setFont(new java.awt.Font("SansSerif", 2, 12)); // NOI18N
        txttelepon.setForeground(new java.awt.Color(102, 102, 102));
        txttelepon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtteleponActionPerformed(evt);
            }
        });
        txttelepon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtteleponKeyTyped(evt);
            }
        });

        jLabel8.setText("Alamat");

        txtalamat.setFont(new java.awt.Font("SansSerif", 2, 12)); // NOI18N
        txtalamat.setForeground(new java.awt.Color(102, 102, 102));
        txtalamat.setText("Alamat");
        txtalamat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtalamatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelAddLayout = new javax.swing.GroupLayout(PanelAdd);
        PanelAdd.setLayout(PanelAddLayout);
        PanelAddLayout.setHorizontalGroup(
            PanelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelAddLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(PanelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(PanelAddLayout.createSequentialGroup()
                        .addGap(322, 322, 322)
                        .addComponent(jLabel14)
                        .addGap(268, 268, 268)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(masterdata1))
                    .addGroup(PanelAddLayout.createSequentialGroup()
                        .addComponent(btnsave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addGap(710, 710, 710)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtid)
                    .addComponent(txtnama)
                    .addComponent(txtemail)
                    .addComponent(txttelepon)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtalamat))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelAddLayout.setVerticalGroup(
            PanelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelAddLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addGroup(PanelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel16)
                        .addComponent(masterdata1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnsave)
                        .addComponent(jButton4))
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtnama, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtemail, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txttelepon, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtalamat, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(251, Short.MAX_VALUE))
        );

        PanelMain.add(PanelAdd, "card2");

        add(PanelMain, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void masterdataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_masterdataMouseClicked
        
    }//GEN-LAST:event_masterdataMouseClicked

    private void masterdata1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_masterdata1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_masterdata1MouseClicked

    private void txtidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtidActionPerformed

    private void txtnamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnamaActionPerformed

    private void txtemailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtemailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtemailActionPerformed

    private void txtteleponActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtteleponActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtteleponActionPerformed

    private void btntambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntambahActionPerformed
        PanelMain.removeAll();
        PanelMain.add(PanelAdd);
        PanelMain.repaint();
        PanelMain.revalidate();
        if(btntambah.getText().equals("Ubah")){
            dataTable();
            btnsave.setText("Perbarui");
        }
        
    }//GEN-LAST:event_btntambahActionPerformed

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        if(btnsave.getText().equals("Tambah")){
            btnsave.setText("Save");
        }
        else if(btnsave.getText().equals("Save"))
        {
            insertData();
        }
        else if(btnsave.getText().equals("Perbarui"))
        {
            UpdateData();
        }
    }//GEN-LAST:event_btnsaveActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        PanelMain.removeAll();
        PanelMain.add(panelview);
        PanelMain.repaint();
        PanelMain.revalidate();

    }//GEN-LAST:event_jButton4ActionPerformed

    private void txtalamatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtalamatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtalamatActionPerformed

    private void txtteleponKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtteleponKeyTyped
        char c = evt.getKeyChar();

        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Hanya input karakter non-angka yang diperbolehkan", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (txttelepon.getText().length() >= 15) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Hanya input angka dengan maksimal 15 digit yang diperbolehkan", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtteleponKeyTyped

    private void btnbatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbatalActionPerformed
        if(btntambah.getText().equals("Ubah")){
            btntambah.setText("Tambah");
            btnhapus.setVisible(false);
            btnbatal.setVisible(false);
        }
    }//GEN-LAST:event_btnbatalActionPerformed

    private void tblhasilMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblhasilMouseClicked
        // TODO add your handling code here:
        if(btntambah.getText().equals("Tambah")){
            btntambah.setText("Ubah");
            btnhapus.setVisible(true);
            btnbatal.setVisible(true);
        }
    }//GEN-LAST:event_tblhasilMouseClicked

    private void btncariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncariActionPerformed
        // TODO add your handling code here:
        cari();
    }//GEN-LAST:event_btncariActionPerformed

    private void txtcariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcariActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcariActionPerformed

    private void btnhapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhapusActionPerformed
        // TODO add your handling code here:
         int pilih = tblhasil.getSelectedRow();
        if(pilih==-1){
        JOptionPane.showMessageDialog(this, "Pilih data yg ingin dihapus", "Pemberitahuan", JOptionPane.ERROR_MESSAGE);
        return;
        }
        int confirm = JOptionPane.showConfirmDialog(this, "Apakah anda yakin ingin menghapus data ini", "Konfirmasi", JOptionPane.YES_NO_OPTION);
        if(confirm==JOptionPane.YES_OPTION){
        String id = tblhasil.getValueAt(pilih, 0).toString();
        
            try {
                String sql = "DELETE FROM tblpetugas WHERE IDPetugas=?";
                PreparedStatement st = conn.prepareStatement(sql);
                st.setString(1, id);
                
                int rowDelete = st.executeUpdate();
                if(rowDelete > 0){
                    JOptionPane.showMessageDialog(this, "Data berhasil dihapus");
                    resetform();
                    loadData();
                }
                st.close();
            } catch (SQLException e) {
                Logger.getLogger(MenuAggota.class.getName()).log(Level.SEVERE,null,e);
            }
        }
    }//GEN-LAST:event_btnhapusActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelAdd;
    private javax.swing.JPanel PanelMain;
    private javax.swing.JButton btnbatal;
    private javax.swing.JButton btncari;
    private javax.swing.JButton btnhapus;
    private javax.swing.JButton btnsave;
    private javax.swing.JButton btntambah;
    private javax.swing.ButtonGroup gbt_jenkel;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JLabel masterdata;
    private javax.swing.JLabel masterdata1;
    private javax.swing.JPanel panelview;
    private javax.swing.JTable tblhasil;
    private javax.swing.JTextField txtalamat;
    private javax.swing.JTextField txtcari;
    private javax.swing.JTextField txtemail;
    private javax.swing.JTextField txtid;
    private javax.swing.JTextField txtnama;
    private javax.swing.JTextField txttelepon;
    // End of variables declaration//GEN-END:variables

    private void loadData() {
        DefaultTableModel model = (DefaultTableModel) tblhasil.getModel();
           model.setRowCount(0);
           try {
               String sql = "Select * From tblpetugas ";
               PreparedStatement st = conn.prepareStatement(sql);
               ResultSet rs = st.executeQuery();
               while(rs.next()){
                   int id = rs.getInt("IDPetugas");
                   String Nama = rs.getString("NamaPetugas");
                   String alamat = rs.getString("Alamat");
                   String email = rs.getString("Email");
                   String tlp = rs.getString("Telepon");
                   Object[] rowData = {id,Nama,alamat,email,tlp};
                   
                   model.addRow(rowData);
                }
                rs.close();
                st.close();
                   

           } catch (SQLException e) {
                Logger.getLogger(MenuAggota.class.getName()).log(Level.SEVERE,null,e);
           }

    }

    private void setTabelModel() {
        
    }

    private void resetform() {
        txtid.setText("");
        txtnama.setText("");
        txtalamat.setText("");
        txtemail.setText("");
        txttelepon.setText("");
        
    }

    private void showpanel() {
        PanelMain.removeAll();
        PanelMain.add(new MenuAggota());
        PanelMain.repaint();
        PanelMain.revalidate();
    }

    private void TampilId() throws SQLException {
        Date sk = new Date();
        SimpleDateFormat format1 = new SimpleDateFormat("yyMMdd");
        String time = format1.format(sk);

        String sql = "SELECT MAX(CAST(SUBSTRING(IDPetugas, 7) AS UNSIGNED)) AS max_kode FROM tblPetugas";
        koneksi.getKoneksi();

        try (Statement cn = conn.createStatement(); ResultSet rs = cn.executeQuery(sql)) {
            if (rs.next()) {
                int maxKode = rs.getInt("max_kode");
                int newKode = maxKode + 1;
                txtid.setText(time + String.format("%03d", newKode)); 
            } else {
                // Jika tidak ada data, artinya ini NoFaktur pertama
                int kode = 1;
                txtid.setText(time + String.format("%03d", kode)); 
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }


    }
    private void dataTable() {
        panelview.setVisible(false);
        PanelAdd.setVisible(true);
        jLabel14.setText("Perbarui Data Petugas");
       int pilih = tblhasil.getSelectedRow();      
        if(pilih!=-1){
        String kode = tblhasil.getValueAt(pilih, 0).toString();
        String nama = tblhasil.getValueAt(pilih, 1).toString();
        String alamat = tblhasil.getValueAt(pilih, 2).toString();
        String email = tblhasil.getValueAt(pilih, 3).toString();
        String tlp = tblhasil.getValueAt(pilih, 4).toString();
        
        txtid.setText(kode);
        txtnama.setText(nama);
        txtalamat.setText(alamat);
        txtemail.setText(email);
        txttelepon.setText(tlp);
        
        }
    }

    private void insertData() {
        String id = txtid.getText();
        String nama = txtnama.getText();
        String alamat = txtalamat.getText();
        String email = txtemail.getText();
        String tlp = txttelepon.getText();
        if (id.isEmpty() || nama.isEmpty()|| alamat.isEmpty()|| email.isEmpty()|| tlp.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Kolom wajib di isi !","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            String sql = "INSERT INTO tblpetugas(IDPetugas,NamaPetugas,Alamat,Email,Telepon) VALUES(?,?,?,?,?)";
            PreparedStatement st = conn.prepareStatement(sql);
             st.setString(1, id);
            st.setString(2, nama);
            st.setString(3, alamat);
            st.setString(4, email);
            st.setString(5, tlp);
           
            int rowInserted = st.executeUpdate();
            if(rowInserted >0){
                JOptionPane.showMessageDialog(this, "Data sukses");
                resetform();
                loadData();
                showpanel();
            }
            st.close();
        } catch (SQLException e) {
             Logger.getLogger(MenuAggota.class.getName()).log(Level.SEVERE,null,e);
        }
    }
    
    private void UpdateData(){
        int pilih = tblhasil.getSelectedRow();
        String id = tblhasil.getValueAt(pilih, 0).toString();
        String nama = txtnama.getText();
        String alamat = txtalamat.getText();
        String email = txtemail.getText();
        String tlp = txttelepon.getText();
    
        if (nama.isEmpty() || id.isEmpty()|| alamat.isEmpty()|| email.isEmpty()|| tlp.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Kolom wajib di isi !","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            String sql = "UPDATE  tblpetugas SET NamaPetugas =?,Alamat=?,Email=?,Telepon=? WHERE IDPetugas=?";
            PreparedStatement st = conn.prepareStatement(sql);
             st.setString(1, nama);
             st.setString(2, alamat);
             st.setString(3, email);
             st.setString(4, tlp);
            st.setString(5, id);
           
            int rowInserted = st.executeUpdate();
            if(rowInserted >0){
                JOptionPane.showMessageDialog(this, "Data berhasil di perbaharui");
                
                loadData();
                resetform();
                showpanel();
            };
            st.close();
        } catch (SQLException e) {
             Logger.getLogger(MenuAggota.class.getName()).log(Level.SEVERE,null,e);
        }
    }

    private void Button() {
        btnhapus.setVisible(false);
        btnbatal.setVisible(false);
    }    
    
    private void cari(){
         DefaultTableModel model = (DefaultTableModel) tblhasil.getModel();
        model.setRowCount(0);
        String cari = txtcari.getText();

        try {
            String sql = "SELECT * FROM tblpetugas WHERE IDPetugas LIKE ?";
            PreparedStatement st = conn.prepareStatement(sql);
            st.setString(1, "%" + cari + "%");
            ResultSet rs = st.executeQuery();

            while (rs.next()) {
                int id = rs.getInt("IDPetugas");
                String nama = rs.getString("NamaPetugas");
                String alamat = rs.getString("Alamat");
                String email = rs.getString("Email");
                String tlp = rs.getString("Telepon");
                Object[] rowData = {id, nama, alamat, email, tlp};

                model.addRow(rowData);
            }

            rs.close();
            st.close();
        } catch (SQLException e) {
            Logger.getLogger(MenuAggota.class.getName()).log(Level.SEVERE, null, e);
        }
    }
  
}


