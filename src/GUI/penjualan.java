package GUI;
import penjualan.koneksi;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
public class penjualan extends javax.swing.JFrame {

    private DefaultTableModel model;
    public penjualan() {
        initComponents();
        loadData();
        TampilBarang();
        TampilPetugas();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtfaktur = new javax.swing.JTextField();
        cmbpetugas = new javax.swing.JComboBox<>();
        txtNamaPetugas = new javax.swing.JTextField();
        txttgl = new javax.swing.JFormattedTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        cmbbarang = new javax.swing.JComboBox<>();
        txtNamaBarang = new javax.swing.JTextField();
        txtHargaJual = new javax.swing.JTextField();
        txtstok = new javax.swing.JTextField();
        txtjumlah = new javax.swing.JTextField();
        txthitung = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txtsubtotal = new javax.swing.JTextField();
        AddItem = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblhasil = new javax.swing.JTable();
        txtbayar = new javax.swing.JTextField();
        txtsisa = new javax.swing.JTextField();
        txttotal = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        btnsave = new javax.swing.JButton();
        update = new javax.swing.JButton();
        btnhapus = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Penjualan");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 20, -1, -1));

        jLabel2.setText("NoFaktur");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, -1, -1));

        jLabel3.setText("ID Petugas");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, -1, -1));

        jLabel4.setText("NamaPetugas");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 90, -1, -1));

        jLabel5.setText("Tanggal Penjualan");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 50, -1, -1));

        txtfaktur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfakturActionPerformed(evt);
            }
        });
        jPanel1.add(txtfaktur, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 50, 90, -1));

        cmbpetugas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PILIH", " " }));
        cmbpetugas.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbpetugasItemStateChanged(evt);
            }
        });
        jPanel1.add(cmbpetugas, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 80, 90, -1));
        jPanel1.add(txtNamaPetugas, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 90, 150, -1));

        txttgl.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("d/M/y"))));
        txttgl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttglActionPerformed(evt);
            }
        });
        jPanel1.add(txttgl, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 50, 120, -1));

        jPanel2.setBackground(new java.awt.Color(255, 255, 102));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("DataPenjualan"));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setText("Kode Barang");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 24, -1, -1));

        jLabel7.setText("Nama Barang");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 30, -1, -1));

        jLabel8.setText("Harga Jual ");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 60, -1, -1));

        jLabel9.setText("Stok");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 90, -1, -1));

        jLabel10.setText("Jumlah");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 120, -1, -1));

        cmbbarang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PILIH" }));
        cmbbarang.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbbarangItemStateChanged(evt);
            }
        });
        jPanel2.add(cmbbarang, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 20, 90, -1));
        jPanel2.add(txtNamaBarang, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 30, 110, -1));
        jPanel2.add(txtHargaJual, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 60, 110, -1));
        jPanel2.add(txtstok, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 90, 110, -1));
        jPanel2.add(txtjumlah, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 120, 70, -1));

        txthitung.setText("HITUNG");
        txthitung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txthitungActionPerformed(evt);
            }
        });
        jPanel2.add(txthitung, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 120, -1, -1));

        jLabel11.setText("SUB TOTAL");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 120, -1, -1));
        jPanel2.add(txtsubtotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 120, 70, -1));

        AddItem.setText("AddI tem");
        AddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddItemActionPerformed(evt);
            }
        });
        jPanel2.add(AddItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 160, -1, -1));

        tblhasil.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9", "Title 10"
            }
        ));
        tblhasil.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblhasilMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblhasil);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 660, 160));
        jPanel2.add(txtbayar, new org.netbeans.lib.awtextra.AbsoluteConstraints(374, 390, 80, -1));
        jPanel2.add(txtsisa, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 390, 80, -1));

        txttotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttotalActionPerformed(evt);
            }
        });
        jPanel2.add(txttotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(554, 390, 80, -1));

        jLabel12.setText("Bayar");
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 370, -1, -1));

        jLabel13.setText("Sisa");
        jPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 370, -1, -1));

        jLabel14.setText("Total");
        jPanel2.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 370, 40, -1));

        jButton2.setText("Bayar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 390, -1, -1));

        btnsave.setText("Save");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });
        jPanel2.add(btnsave, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 390, -1, -1));

        update.setText("update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        jPanel2.add(update, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 390, -1, -1));

        btnhapus.setText("Hapus");
        btnhapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhapusActionPerformed(evt);
            }
        });
        jPanel2.add(btnhapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 390, -1, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 690, 420));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 729, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 561, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txttotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttotalActionPerformed

    private void cmbpetugasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbpetugasItemStateChanged
        try {
    String sql = "SELECT * FROM tblpetugas WHERE IDPetugas='" + cmbpetugas.getSelectedItem().toString() + "'";
    Connection c = koneksi.getKoneksi();
    Statement s = c.createStatement();
    ResultSet r = s.executeQuery(sql);

    if (r.next()) {
        String Nama = r.getString("NamaPetugas");
        if (Nama != null) {
            txtNamaPetugas.setText(Nama);
        } else {
            
            txtNamaPetugas.setText("Nilai kolom Jenis adalah null");
        }
    } else {
        
        txtNamaPetugas.setText("");
    }
} catch (SQLException e) {
    
    e.printStackTrace();
}
    }//GEN-LAST:event_cmbpetugasItemStateChanged

    private void cmbbarangItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbbarangItemStateChanged
        try {
    String sql = "SELECT * FROM tblbarang WHERE KodeBarang='" + cmbbarang.getSelectedItem().toString() + "'";
    Connection c = koneksi.getKoneksi();
    Statement s = c.createStatement();
    ResultSet r = s.executeQuery(sql);

    if (r.next()) {
        String Nama = r.getString("NamaBarang");
        String HargaJual = r.getString("HargaJual");
        String Stok = r.getString("Stok");
        if (Nama != null) {
            txtNamaBarang.setText(Nama);
            txtHargaJual.setText(HargaJual);
            txtstok.setText(Stok);
        } else {
            
            txtNamaPetugas.setText("Nilai kolom Jenis adalah null");
            txtHargaJual.setText("Nilai kolom ini adalah null");
            txtstok.setText("Nilai kolom ini adalah null");
        }
    } else {
        
        txtNamaPetugas.setText("");
    }
} catch (SQLException e) {
    
}
    }//GEN-LAST:event_cmbbarangItemStateChanged

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        String kode = txtfaktur.getText();
        java.util.Date tanggalBarang = (java.util.Date) txttgl.getValue();
        String petugas = cmbpetugas.getSelectedItem().toString();
        String bayar = txtbayar.getText();
        String sisa = txtsisa.getText();
        String total = txttotal.getText();
        String kj = cmbbarang.getSelectedItem().toString();
        String jumlah = txtjumlah.getText();
        String subtotal = txtsubtotal.getText();
        


if ("".equals(kode) || tanggalBarang == null || "".equals(petugas) || "".equals(bayar) || "".equals(sisa) || "".equals(total) || "".equals(jumlah) || "".equals(subtotal) || "".equals(kj)) {
    JOptionPane.showMessageDialog(this, "Harap Lengkapi Data", "Error", JOptionPane.ERROR_MESSAGE);
} else {
    try {
        Connection c = koneksi.getKoneksi();

      
        String sqlPenjualan = "INSERT INTO tblpenjualan (NoFaktur, TglPenjualan, IDPetugas, Bayar, Sisa, Total) VALUES (?, ?, ?, ?, ?, ?)";
        PreparedStatement pPenjualan = c.prepareStatement(sqlPenjualan);
        pPenjualan.setString(1, kode);
        pPenjualan.setDate(2, new java.sql.Date(tanggalBarang.getTime()));
        pPenjualan.setString(3, petugas);
        pPenjualan.setString(4, bayar);
        pPenjualan.setString(5, sisa);
        pPenjualan.setString(6, total);

        pPenjualan.executeUpdate();

        
        String sqlDetailPenjualan = "INSERT INTO tbldetailpenjualan (NoFaktur, KodeBarang, Jumlah, SubTotal) VALUES (?, ?, ?, ?)";
        PreparedStatement dDetailPenjualan = c.prepareStatement(sqlDetailPenjualan);
        dDetailPenjualan.setString(1, kode);
        dDetailPenjualan.setString(2, kj);
        dDetailPenjualan.setString(3, jumlah);
        dDetailPenjualan.setString(4, subtotal);
        dDetailPenjualan.executeUpdate();

        pPenjualan.close();
        JOptionPane.showMessageDialog(this, "Penyimpanan Data Berhasil", "Succes", JOptionPane.INFORMATION_MESSAGE);
    } catch (SQLException e) {
        
        JOptionPane.showMessageDialog(this, "Terjadi Kesalahan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    } finally {
         loadData();
        // kosong();
    }
}


    }//GEN-LAST:event_btnsaveActionPerformed

    private void txthitungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txthitungActionPerformed
        int HargaJual = Integer.parseInt(txtHargaJual.getText());
        int Jumlah = Integer.parseInt(txtjumlah.getText());
        txtsubtotal.setText(Integer.toString(HargaJual*Jumlah));
    }//GEN-LAST:event_txthitungActionPerformed

    private void AddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddItemActionPerformed
       
        String jumlah = txtjumlah.getText();
        String subtotal = txtsubtotal.getText();
        String kj = cmbbarang.getSelectedItem().toString();

if (jumlah.isEmpty() || subtotal.isEmpty() || kj.isEmpty()) {
    JOptionPane.showMessageDialog(this, "Harap Lengkapi Data", "Error", JOptionPane.ERROR_MESSAGE);
} 
    loadData();

    }//GEN-LAST:event_AddItemActionPerformed

    private void tblhasilMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblhasilMouseClicked
        int baris = tblhasil.getSelectedRow();
        if (baris == -1) {
    return;
}

if (tblhasil.getColumnCount() >=9) {
    String kj = String.valueOf(tblhasil.getValueAt(baris, 0));
    txtfaktur.setText(kj);
    java.util.Date tanggalPenjualan = (java.util.Date) tblhasil.getValueAt(baris, 1);
    txttgl.setValue(tanggalPenjualan);
    cmbpetugas.setSelectedItem(tblhasil.getValueAt(baris, 2));
    String Bayar = String.valueOf(tblhasil.getValueAt(baris, 3));
    txtbayar.setText(Bayar);
    String sisa = String.valueOf(tblhasil.getValueAt(baris, 4));
    txtsisa.setText(sisa);
    String total = String.valueOf(tblhasil.getValueAt(baris, 5));
    txttotal.setText(total);
    cmbbarang.setSelectedItem(tblhasil.getValueAt(baris, 6));
    String jumlah = String.valueOf(tblhasil.getValueAt(baris, 7));
    txtjumlah.setText(jumlah);
    String SubTotal = String.valueOf(tblhasil.getValueAt(baris, 8));
    txtsubtotal.setText(SubTotal);
    
} else {
    
}
    }//GEN-LAST:event_tblhasilMouseClicked

    private void txtfakturActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfakturActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfakturActionPerformed

    private void txttglActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttglActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttglActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        int selectedRow = tblhasil.getSelectedRow();
if (selectedRow == -1) {
    JOptionPane.showMessageDialog(this, "Pilih Data yang ingin di Perbarui");
    return;
}

String kode = (String) model.getValueAt(selectedRow, 0);
java.util.Date tanggalBarang = (java.util.Date) txttgl.getValue();
String petugas = cmbpetugas.getSelectedItem().toString();
String jumlah = txtjumlah.getText();
String subtotal = txtsubtotal.getText();
String bayar = txtbayar.getText();
String sisa = txtsisa.getText();
String total = txttotal.getText();
String kj = cmbbarang.getSelectedItem().toString();

if (kode.isEmpty() || tanggalBarang == null || petugas.isEmpty() || bayar.isEmpty() || sisa.isEmpty() || total.isEmpty() || jumlah.isEmpty() || subtotal.isEmpty() || kj.isEmpty()) {
    JOptionPane.showMessageDialog(this, "Harap Lengkapi Data", "Error", JOptionPane.ERROR_MESSAGE);
} else {
    try {
        Connection c = koneksi.getKoneksi();

        // Pernyataan pertama: Memeriksa apakah data dengan NoFaktur yang dipilih sudah ada
        String checkSql = "SELECT NoFaktur FROM tblpenjualan WHERE NoFaktur = ?";
        PreparedStatement checkStatement = c.prepareStatement(checkSql);
        checkStatement.setString(1, kode);
        ResultSet checkResult = checkStatement.executeQuery();

        if (!checkResult.next()) {
            JOptionPane.showMessageDialog(this, "Data dengan NoFaktur yang dipilih tidak ditemukan", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            checkResult.close();
            checkStatement.close();

           
            c.setAutoCommit(false);

            String sqlPenjualan = "UPDATE tblpenjualan SET TglPenjualan=?, IDPetugas=?, Bayar=?, Sisa=?, Total=? WHERE NoFaktur=?";
            PreparedStatement pPenjualan = c.prepareStatement(sqlPenjualan);

            pPenjualan.setDate(1, new java.sql.Date(tanggalBarang.getTime()));
            pPenjualan.setString(2, petugas);
            pPenjualan.setString(3, bayar);
            pPenjualan.setString(4, sisa);
            pPenjualan.setString(5, total);
            pPenjualan.setString(6, kode);

            pPenjualan.executeUpdate();

            String sqlDetailPenjualan = "UPDATE tbldetailpenjualan SET KodeBarang=?, Jumlah=?, SubTotal=? WHERE NoFaktur=?";
            PreparedStatement dDetailPenjualan = c.prepareStatement(sqlDetailPenjualan);

            dDetailPenjualan.setString(1, kj);
            dDetailPenjualan.setString(2, jumlah);
            dDetailPenjualan.setString(3, subtotal);
            dDetailPenjualan.setString(4, kode);
            dDetailPenjualan.executeUpdate();
            c.commit();
            JOptionPane.showMessageDialog(this, "Pembaruan Data Berhasil", "Success", JOptionPane.INFORMATION_MESSAGE);
        }
    } catch (SQLException e) {
        
        JOptionPane.showMessageDialog(this, "Terjadi Kesalahan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    } finally {
        loadData();
        // kosong();
    }
}

    }//GEN-LAST:event_updateActionPerformed

    private void btnhapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhapusActionPerformed
        int selectedRow = tblhasil.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih Data yang ingin di Hapus");
            return;
        }
        String kode = (String) model.getValueAt(selectedRow, 0);
        if (kode.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Pilih data yang ingin dihapus", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            int confirmDialog = JOptionPane.showConfirmDialog(this, "Anda yakin ingin menghapus data ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);

            if (confirmDialog == JOptionPane.YES_OPTION) {
                try {
                    Connection c = koneksi.getKoneksi();
                    c.setAutoCommit(false);
                    String sqlDetailPenjualan = "DELETE FROM tbldetailpenjualan WHERE NoFaktur = ?";
                    PreparedStatement dDetailPenjualan = c.prepareStatement(sqlDetailPenjualan);
                    dDetailPenjualan.setString(1, kode);
                    dDetailPenjualan.executeUpdate();
                    String sqlPenjualan = "DELETE FROM tblpenjualan WHERE NoFaktur = ?";
                    PreparedStatement pPenjualan = c.prepareStatement(sqlPenjualan);
                    pPenjualan.setString(1, kode);
                    pPenjualan.executeUpdate(); 
                    c.commit();
                    JOptionPane.showMessageDialog(this, "Penghapusan Data Berhasil", "Success", JOptionPane.INFORMATION_MESSAGE);
                } catch (SQLException e) {            
                    JOptionPane.showMessageDialog(this, "Terjadi Kesalahan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                } finally {
                    loadData();
                    // kosong();
                }
            }
        }

    }//GEN-LAST:event_btnhapusActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(penjualan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(penjualan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(penjualan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(penjualan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new penjualan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddItem;
    private javax.swing.JButton btnhapus;
    private javax.swing.JButton btnsave;
    private javax.swing.JComboBox<String> cmbbarang;
    private javax.swing.JComboBox<String> cmbpetugas;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblhasil;
    private javax.swing.JTextField txtHargaJual;
    private javax.swing.JTextField txtNamaBarang;
    private javax.swing.JTextField txtNamaPetugas;
    private javax.swing.JTextField txtbayar;
    private javax.swing.JTextField txtfaktur;
    private javax.swing.JButton txthitung;
    private javax.swing.JTextField txtjumlah;
    private javax.swing.JTextField txtsisa;
    private javax.swing.JTextField txtstok;
    private javax.swing.JTextField txtsubtotal;
    private javax.swing.JFormattedTextField txttgl;
    private javax.swing.JTextField txttotal;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables

    private void loadData() {
         model = new DefaultTableModel();
model.getDataVector().removeAllElements();
model.fireTableDataChanged();

model.addColumn("NoFaktur");
model.addColumn("TanggalPenjualan");
model.addColumn("KodePetugas");
model.addColumn("Bayar");
model.addColumn("Sisa");
model.addColumn("Total");
model.addColumn("KodeBarang");
model.addColumn("Jumlah");
model.addColumn("SubTotal");

try {
    String sql = "SELECT A.NoFaktur, A.TglPenjualan, A.IDPetugas, A.Bayar, A.Sisa, A.Total, B.KodeBarang, B.Jumlah, B.SubTotal " +
            "FROM tblpenjualan A " +
            "INNER JOIN tbldetailpenjualan B " +
            "ON A.NoFaktur = B.NoFaktur";

    Connection c = koneksi.getKoneksi();
    Statement s = c.createStatement();
    ResultSet r = s.executeQuery(sql);

    while (r.next()) {
        model.addRow(new Object[]{
            r.getString(1),
            r.getDate(2),
            r.getString(3),
            r.getString(4),
            r.getString(5),
            r.getString(6),
            r.getString(7),
            r.getString(8),
            r.getString(9)
        });
    }

    tblhasil.setModel(model);
} catch (SQLException e) {
    e.printStackTrace();
    System.out.println("Terjadi Error");
}


    }

    private void TampilBarang() {
        try {
            String sql = "SELECT * FROM tblbarang";
            Connection c = koneksi.getKoneksi();
            Statement s = c.createStatement();
            ResultSet r = s.executeQuery(sql);
            
            while(r.next()){
            
            cmbbarang.addItem(r.getString("KodeBarang")); }
        } catch (SQLException e) {
        }
    }

    private void TampilPetugas() {
        try {
            String sql = "SELECT * FROM tblpetugas";
            Connection c = koneksi.getKoneksi();
            Statement s = c.createStatement();
            ResultSet r = s.executeQuery(sql);
            
            while(r.next()){
            
            cmbpetugas.addItem(r.getString("IDPetugas")); }
        } catch (SQLException e) {
            
        }
    }

    
}
